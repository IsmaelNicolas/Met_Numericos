disp ('Nicolas Cedillo')
Nicolas Cedillo
disp('NRC:7543')
NRC:7543
date

ans =

    '28-Oct-2021'

clock

ans =

   1.0e+03 *

  Columns 1 through 4

    2.0210    0.0100    0.0280    0.0090

  Columns 5 through 6

    0.0380    0.0496

a = 7

a =

     7

b = 9 ;
a+b

ans =

    16

a*b

ans =

    63

a/b

ans =

    0.7778

a^b

ans =

    40353607

who

Your variables are:

a    ans  b    

whos
  Name      Size            Bytes  Class     Attributes

  a         1x1                 8  double              
  ans       1x1                 8  double              
  b         1x1                 8  double              

realmax

ans =

  1.7977e+308

5/0

ans =

   Inf

format long
pi

ans =

   3.141592653589793

format long eng
pi

ans =

    3.14159265358979e+000

format bank
pi

ans =

          3.14

format rat 
pi

ans =

     355/113   

ceil(pi)

ans =

       4       

round
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('round')" style="font-weight:bold">round</a>
Not enough input arguments.
} 
round(pi)

ans =

       3       

fix(pi)

ans =

       3       

sin(pi/2)

ans =

       1       

sind(pi/2)

ans =

     202/7369  

sind(90)

ans =

       1       

sinh(pi/2)

ans =

     886/385   

asin(1)

ans =

     355/226   

format short
asin(1)

ans =

    1.5708

asind(1)

ans =

    90

asinh(1)

ans =

    0.8814

disp('sin,cos,tan,csc,sec,cot')
sin,cos,tan,csc,sec,cot
abs(-pi)

ans =

    3.1416

sign(pi)

ans =

     1

sign(-pi)

ans =

    -1

sign(0)

ans =

     0

exp()
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('exp')" style="font-weight:bold">exp</a>
Not enough input arguments.
} 
exp(1)

ans =

    2.7183

log(10)

ans =

    2.3026

log2(10)

ans =

    3.3219

log10(10)

ans =

     1

sqrt(100)

ans =

    10

gcd(9,12)

ans =

     3

lcn(9,12)
{Unrecognized function or variable 'lcn'.
} 
lcm(9,12)

ans =

    36

rem(12,5)

ans =

     2

x = 4+4i

x =

   4.0000 + 4.0000i

y = 5+7j

y =

   5.0000 + 7.0000i

abs(y)

ans =

    8.6023

angle(x)

ans =

    0.7854

complex(a,b)

ans =

   7.0000 + 9.0000i

conj(x)

ans =

   4.0000 - 4.0000i

imag(ans)

ans =

    -4

real(y)

ans =

     5

sign(x)

ans =

   0.7071 + 0.7071i

x/5

ans =

   0.8000 + 0.8000i

isreal(x)

ans =

  <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a>

   0

helpPopup logical
helpPopup logical
isreal(a)

ans =

  <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a>

   1

for i in range
 for i in range
       ↑
{Error: Invalid expression. Check for missing
multiplication operator, missing or unbalanced
delimiters, or other syntax error. To
construct matrices, use brackets instead of
parentheses.
} 
(1:20)

ans =

  Columns 1 through 7

     1     2     3     4     5     6     7

  Columns 8 through 14

     8     9    10    11    12    13    14

  Columns 15 through 20

    15    16    17    18    19    20

(1:3:33)

ans =

  Columns 1 through 7

     1     4     7    10    13    16    19

  Columns 8 through 11

    22    25    28    31

(40:-5:3)

ans =

  Columns 1 through 7

    40    35    30    25    20    15    10

  Column 8

     5

linspace(2,10,8)

ans =

  Columns 1 through 4

    2.0000    3.1429    4.2857    5.4286

  Columns 5 through 8

    6.5714    7.7143    8.8571   10.0000

clc
clear
x = [5 7,-4,-3 2 0 8 1]

x =

  Columns 1 through 7

     5     7    -4    -3     2     0     8

  Column 8

     1

x = [5 7,-4,-3 2 0 8 1]

x =

     5     7    -4    -3     2     0     8     1

roots(x)

ans =

  -1.4112 + 0.2615i
  -1.4112 - 0.2615i
   0.8966 + 0.4808i
   0.8966 - 0.4808i
  -0.1231 + 0.8594i
  -0.1231 - 0.8594i
  -0.1244 + 0.0000i

poly(ans)

ans =

  Columns 1 through 6

    1.0000    1.4000   -0.8000   -0.6000    0.4000   -0.0000

  Columns 7 through 8

    1.6000    0.2000

x/7

ans =

  Columns 1 through 6

    0.7143    1.0000   -0.5714   -0.4286    0.2857         0

  Columns 7 through 8

    1.1429    0.1429

y = [5,-7,3]

y =

     5    -7     3

dconv(x,y)
{Unrecognized function or variable 'dconv'.
} 
deconv(x,y)

ans =

    1.0000    2.8000    2.5200    1.2480    0.6352    0.1405

polyval(x,5)

ans =

      485916

a = [1:7]

a =

     1     2     3     4     5     6     7

b = 4-a

b =

     3     2     1     0    -1    -2    -3

p a<6
{Unrecognized function or variable 'p'.
} 
p=a<6

p =

  1×7 <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a> array

   1   1   1   1   1   0   0

q=a==b

q =

  1×7 <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a> array

   0   1   0   0   0   0   0

t = a~=b

t =

  1×7 <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a> array

   1   0   1   1   1   1   1

k = (a>b)&(b>-4)

k =

  1×7 <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a> array

   0   0   1   1   1   1   1

k = (a>b)|(b>-4)

k =

  1×7 <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a> array

   1   1   1   1   1   1   1

c = [inf 8 -4  ]

c =

   Inf     8    -4

c = [inf 8 -4 0 3,14 16]

c =

   Inf     8    -4     0     3    14    16

ininf(c)
{Unrecognized function or variable 'ininf'.
} 
isinf(c)

ans =

  1×7 <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a> array

   1   0   0   0   0   0   0

infinite(c)
{Unrecognized function or variable 'infinite'.
} 
isfinite(c)

ans =

  1×7 <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a> array

   0   1   1   1   1   1   1

exist(c)
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('exist')" style="font-weight:bold">exist</a>
The first input to exist must be a string scalar or character
vector.
} 
exist('c')

ans =

     1

clc
disp('ischar, isempy,isequal,isfloat,isinteger,islogical,isnumeric,isprime,isreal,isscalar')
ischar, isempy,isequal,isfloat,isinteger,islogical,isnumeric,isprime,isreal,isscalar
disp('xor,any,all')
xor,any,all
help isfloat
isfloat - Determine if input is floating-point array

    This MATLAB function returns true if A is a floating-point array and false
    otherwise.

    tf = isfloat(A)

    See also <a href="https://www.mathworks.com/help/releases/R2020a/matlab/ref/double.html">double</a>, <a href="https://www.mathworks.com/help/releases/R2020a/matlab/ref/isa.html">isa</a>, <a href="https://www.mathworks.com/help/releases/R2020a/matlab/ref/isinteger.html">isinteger</a>, <a href="https://www.mathworks.com/help/releases/R2020a/matlab/ref/isnumeric.html">isnumeric</a>, <a href="https://www.mathworks.com/help/releases/R2020a/matlab/ref/single.html">single</a>

    <a href="matlab:doc isfloat">Documentation for isfloat</a>

doc isfloat
diary off
